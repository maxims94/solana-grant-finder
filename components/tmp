

const GrantsTable = () => {
  const { data, error } = useAirtable('Grants');

  const [sortKey, setSortKey] = useState(null);
  const [sortOrder, setSortOrder] = useState('asc');
  const [categoryFilter, setCategoryFilter] = useState(null);
  const [rfpFilter, setRfpFilter] = useState(null);

  const handleSortClick = (key) => {
    if (sortKey === key) {
      setSortOrder(sortOrder === 'asc' ? 'desc' : 'asc');
    } else {
      setSortKey(key);
      setSortOrder('asc');
    }
  };

  const handleCategoryFilterChange = (event) => {
    setCategoryFilter(event.target.value || null);
  };

  const handleRfpFilterChange = (event) => {
    setRfpFilter(event.target.value || null);
  };

  const filteredData = data.filter((grant) => {
    if (categoryFilter && grant.category !== categoryFilter) {
      return false;
    }

    if (rfpFilter && grant.rfp !== rfpFilter) {
      return false;
    }

    return true;
  });

  const sortedData = filteredData.sort((a, b) => {
    if (sortKey) {
      const aValue = a[sortKey];
      const bValue = b[sortKey];

      if (typeof aValue === 'string' && typeof bValue === 'string') {
        return sortOrder === 'asc' ? aValue.localeCompare(bValue) : bValue.localeCompare(aValue);
      } else {
        return sortOrder === 'asc' ? aValue - bValue : bValue - aValue;
      }
    } else {
      return 0;
    }
  });

  if (error) {
    return <div>{error.message}</div>;
  }

  return (
    <table>
      <thead>
        <tr>
          <th onClick={() => handleSortClick('name')}>Name</th>
          <th onClick={() => handleSortClick('category')}>Category</th>
          <th onClick={() => handleSortClick('deadline')}>Deadline</th>
          <th onClick={() => handleSortClick('rfp')}>RFP</th>
        </tr>
        <tr>
          <td>
            <input type="text" value={categoryFilter || ''} onChange={handleCategoryFilterChange} />
          </td>
          <td></td>
          <td></td>
          <td>
            <select value={rfpFilter
